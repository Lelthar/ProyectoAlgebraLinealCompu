/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package algebraprogra;

import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author gerald
 */
public class VentanaPrueba extends javax.swing.JFrame {
    AlgebraProgra nuevo;
    Operaciones operaciones;
    /**
     * Creates new form VentanaPrueba
     */
    public VentanaPrueba() {
        initComponents();
        operaciones = new Operaciones();
        
        double[][] matriz = new double[3][3];
        double[] vector = new double[3];
        
        vector[0] = 0;
        vector[1] = 5;
        vector[2] = 0;
        
        matriz[0][0] = 1;
        matriz[0][1] = 0;
        matriz[0][2] = 1;
        
        matriz[1][0] = 0;
        matriz[1][1] = 1;
        matriz[1][2] = 1;
        
        matriz[2][0] = 1;
        matriz[2][1] = 0;
        matriz[2][2] = 1;
        
        //double[] resultado = operaciones.gaussJordan(matriz, vector);
        //double[] rotacion = operaciones.calcularRotacion(270, vector);
        System.out.println("valor "+Arrays.toString(operaciones.calcularTransformacionIsometrica(vector)));
        
        /*System.out.println(operaciones.baseLinealmenteIndependiente(resultado));
        System.out.println(Arrays.toString(resultado));*/
        //System.out.println("Rotacion: "+Arrays.toString(rotacion));
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrueba = new javax.swing.JPanel();
        btn2 = new javax.swing.JButton();
        txfU = new javax.swing.JTextField();
        sliderRotacion = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txfV = new javax.swing.JTextField();
        txfW = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txfP = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelPrueba.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panelPruebaLayout = new javax.swing.GroupLayout(panelPrueba);
        panelPrueba.setLayout(panelPruebaLayout);
        panelPruebaLayout.setHorizontalGroup(
            panelPruebaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        panelPruebaLayout.setVerticalGroup(
            panelPruebaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );

        btn2.setText("[Enter]");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        txfU.setText("(1,0,0)");
        txfU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfUActionPerformed(evt);
            }
        });

        sliderRotacion.setMaximum(360);
        sliderRotacion.setValue(0);
        sliderRotacion.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderRotacionStateChanged(evt);
            }
        });

        jLabel1.setText("Rotacion del eje Z");

        jLabel2.setText("P =");

        jLabel3.setText("Base B = ");

        txfV.setText("(0,1,0)");

        txfW.setText("(0,0,1)");

        jLabel4.setText("v =");

        jLabel5.setText("u = ");

        jLabel6.setText("{");

        jLabel7.setText("w = ");

        jLabel8.setText("}");

        txfP.setText("(1,2,3)");
        txfP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txfU, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addGap(5, 5, 5)
                        .addComponent(txfV, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txfW, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txfP, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(267, 267, 267)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(256, 256, 256)
                                .addComponent(sliderRotacion, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(panelPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txfP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sliderRotacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txfU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(txfV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txfW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(btn2))
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        // TODO add your handling code here:
        double[][] matrizBase = new double[3][3];
        double[] vectorP = operaciones.extractorVectorString(txfP.getText(),3);
        double[] vectorU = operaciones.extractorVectorString(txfU.getText(),3);
        double[] vectorV = operaciones.extractorVectorString(txfV.getText(),3);
        double[] vectorW = operaciones.extractorVectorString(txfW.getText(),3);
        matrizBase[0] = vectorU;
        matrizBase[1] = vectorV;
        matrizBase[2] = vectorW;
        
        double[] listaX = new double[3];
        double[] listaY = new double[3];
        double[] listaZ = new double[3];
        
        listaX[0] = 5;
        listaX[1] = 0;
        listaX[2] = 0;
        
        listaY[0] = 0;
        listaY[1] = 5;
        listaY[2] = 0;
        
        listaZ[0] = 0;
        listaZ[1] = 0;
        listaZ[2] = 5;
        
        double[] listaX2D = new double[2];
        double[] listaY2D = new double[2];
        double[] listaZ2D = new double[2];
        
        
        double[] vectorCoordenadas = operaciones.gaussJordan(matrizBase, operaciones.vectorCeros(3));
        
        if(operaciones.baseLinealmenteIndependiente(vectorCoordenadas)){
            List<Component> componentList = Arrays.asList(panelPrueba.getComponents());
            if(componentList.contains(nuevo)){
                panelPrueba.remove(nuevo); //remove component from your jpanel in this case i used jpanel
                panelPrueba.revalidate();
                panelPrueba.repaint();//repaint a JFrame jframe in this case 
               
                listaX2D = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), listaX));
                listaY2D = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), listaY));
                listaZ2D = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), listaZ));
                
                double[] vectorGenerador = operaciones.gaussJordan(matrizBase, vectorP);
                System.out.println(Arrays.toString(vectorGenerador));
                double[] vectorBase1 = operaciones.multiplicarVectorXEscalar(vectorU, vectorGenerador[0]);
                System.out.println(Arrays.toString(vectorBase1));
                double[] vectorBase2 = operaciones.multiplicarVectorXEscalar(vectorV, vectorGenerador[1]);
                System.out.println(Arrays.toString(vectorBase2));
                double[] vectorBase3 = operaciones.multiplicarVectorXEscalar(vectorW, vectorGenerador[2]);
                System.out.println(Arrays.toString(vectorBase3));
                
                double[] vectorGeneradorXY = operaciones.gaussJordan(matrizBase, vectorP);
                vectorGeneradorXY[2] = 0;

                double[] listaB2D1 = new double[2];
                double[] listaB2D2 = new double[2];
                double[] listaB2D3 = new double[2];
                double[] listaP2D1 = new double[2];
                double[] listaP2D2 = new double[2];
                double[] listaP2D3 = new double[2];
                double[] listaPunto = new double[2];
                double[] listaGen = new double[2];
                double[] listaPunto2 = new double[2];

                listaB2D1 = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), vectorU));
                listaB2D2 = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), vectorV));
                listaB2D3 = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), vectorW));
                listaP2D1 = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), vectorBase1));
                listaP2D2 = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), vectorBase2));
                listaP2D3 = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), vectorBase3));
                listaPunto2 = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), vectorGenerador));
                listaPunto = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), vectorGenerador));
                listaGen = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), vectorGeneradorXY));
            
                nuevo = new AlgebraProgra(listaX2D[0]*40+400,-listaX2D[1]*40+400,listaY2D[0]*40+400,-listaY2D[1]*40+400,listaZ2D[0]*40+400,-listaZ2D[1]*40+400,true,listaP2D1[0]*40+400,-listaP2D1[1]*40+400,listaP2D2[0]*40+400,-listaP2D2[1]*40+400,listaP2D3[0]*40+400,-listaP2D3[1]*40+400,listaP2D1[0]*40+400,-listaP2D1[1]*40+400,listaGen[0]*40+400,-listaGen[1]*40+400,listaP2D2[0]*40+400,-listaP2D2[1]*40+400,listaPunto2[0]*40+400,-listaPunto2[1]*40+400,listaPunto[0]*40+395,-listaPunto[1]*40+395);
                panelPrueba.add(nuevo); //add component to jpanel in this case i used jpanel 
                panelPrueba.revalidate(); 
                panelPrueba.repaint();//repaint a JFrame jframe in this case 
                
                
            }else{
                
                listaX2D = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), listaX));
                listaY2D = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), listaY));
                listaZ2D = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), listaZ));
                
                double[] vectorGenerador = operaciones.gaussJordan(matrizBase, vectorP);
                System.out.println(Arrays.toString(vectorGenerador));
                double[] vectorBase1 = operaciones.multiplicarVectorXEscalar(vectorU, vectorGenerador[0]);
                System.out.println(Arrays.toString(vectorBase1));
                double[] vectorBase2 = operaciones.multiplicarVectorXEscalar(vectorV, vectorGenerador[1]);
                System.out.println(Arrays.toString(vectorBase2));
                double[] vectorBase3 = operaciones.multiplicarVectorXEscalar(vectorW, vectorGenerador[2]);
                System.out.println(Arrays.toString(vectorBase3));
                
                double[] vectorGeneradorXY = operaciones.gaussJordan(matrizBase, vectorP);
                vectorGeneradorXY[2] = 0;

                double[] listaB2D1 = new double[2];
                double[] listaB2D2 = new double[2];
                double[] listaB2D3 = new double[2];
                double[] listaP2D1 = new double[2];
                double[] listaP2D2 = new double[2];
                double[] listaP2D3 = new double[2];
                double[] listaPunto = new double[2];
                double[] listaGen = new double[2];
                double[] listaPunto2 = new double[2];

                listaB2D1 = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), vectorU));
                listaB2D2 = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), vectorV));
                listaB2D3 = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), vectorW));
                listaP2D1 = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), vectorBase1));
                listaP2D2 = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), vectorBase2));
                listaP2D3 = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), vectorBase3));
                listaPunto2 = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), vectorGenerador));
                listaPunto = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), vectorGenerador));
                listaGen = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), vectorGeneradorXY));
            
                nuevo = new AlgebraProgra(listaX2D[0]*40+400,-listaX2D[1]*40+400,listaY2D[0]*40+400,-listaY2D[1]*40+400,listaZ2D[0]*40+400,-listaZ2D[1]*40+400,true,listaP2D1[0]*40+400,-listaP2D1[1]*40+400,listaP2D2[0]*40+400,-listaP2D2[1]*40+400,listaP2D3[0]*40+400,-listaP2D3[1]*40+400,listaP2D1[0]*40+400,-listaP2D1[1]*40+400,listaGen[0]*40+400,-listaGen[1]*40+400,listaP2D2[0]*40+400,-listaP2D2[1]*40+400,listaPunto2[0]*40+400,-listaPunto2[1]*40+400,listaPunto[0]*40+395,-listaPunto[1]*40+395);
                panelPrueba.add(nuevo); //add component to jpanel in this case i used jpanel 
                panelPrueba.revalidate(); 
                panelPrueba.repaint();//repaint a JFrame jframe in this case 
                
            
            }
            
            
            
        }else{
            List<Component> componentList = Arrays.asList(panelPrueba.getComponents());
            if(componentList.contains(nuevo)){
                panelPrueba.remove(nuevo); //remove component from your jpanel in this case i used jpanel
                panelPrueba.revalidate();
                panelPrueba.repaint();//repaint a JFrame jframe in this case 
               
                listaX2D = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), listaX));
                listaY2D = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), listaY));
                listaZ2D = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), listaZ));
                nuevo = new AlgebraProgra(listaX2D[0]*40+400,-listaX2D[1]*40+400,listaY2D[0]*40+400,-listaY2D[1]*40+400,listaZ2D[0]*40+400,-listaZ2D[1]*40+400,false);
                panelPrueba.add(nuevo); //add component to jpanel in this case i used jpanel 
                panelPrueba.revalidate(); 
                panelPrueba.repaint();//repaint a JFrame jframe in this case 
                
                
            }else{
                listaX2D = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), listaX));
                listaY2D = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), listaY));
                listaZ2D = operaciones.calcularTransformacionIsometrica(operaciones.calcularRotacion(sliderRotacion.getValue(), listaZ));
                nuevo = new AlgebraProgra(listaX2D[0]*40+400,-listaX2D[1]*40+400,listaY2D[0]*40+400,-listaY2D[1]*40+400,listaZ2D[0]*40+400,-listaZ2D[1]*40+400,false);
                panelPrueba.add(nuevo); //add component to jpanel in this case i used jpanel 
                panelPrueba.revalidate(); 
                panelPrueba.repaint();//repaint a JFrame jframe in this case */
                
            
            }
            JOptionPane.showMessageDialog(this, "B no es un conjunto linealmente independiente ", "Error de entradas", JOptionPane.ERROR_MESSAGE);
        }
        
        /*System.out.println("Vector P = "+Arrays.toString(vectorP));
        System.out.println("Vector U = "+Arrays.toString(vectorU));
        System.out.println("Vector V = "+Arrays.toString(vectorV));
        System.out.println("Vector W = "+Arrays.toString(vectorW));*/
        /*nuevo = new AlgebraProgra(x,y,x1,y1,x2,y2,false);
        
        panelPrueba.add(nuevo); //add component to jpanel in this case i used jpanel 
        panelPrueba.revalidate(); 
        panelPrueba.repaint();//repaint a JFrame jframe in this case */
        
        
        
        /*panelPrueba.remove(nuevo); //remove component from your jpanel in this case i used jpanel
        panelPrueba.revalidate();
        panelPrueba.repaint();//repaint a JFrame jframe in this case*/
    }//GEN-LAST:event_btn2ActionPerformed

    private void sliderRotacionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderRotacionStateChanged
        // TODO add your handling code here:
        System.out.println("Valor slider: "+sliderRotacion.getValue());
    }//GEN-LAST:event_sliderRotacionStateChanged

    private void txfPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfPActionPerformed

    private void txfUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfUActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfUActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrueba().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel panelPrueba;
    private javax.swing.JSlider sliderRotacion;
    private javax.swing.JTextField txfP;
    private javax.swing.JTextField txfU;
    private javax.swing.JTextField txfV;
    private javax.swing.JTextField txfW;
    // End of variables declaration//GEN-END:variables
}
